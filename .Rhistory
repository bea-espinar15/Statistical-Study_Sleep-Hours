interv <- c(interv, '(' + vec[i] + ', ' + vec[i + 1] + ']')
# metemos los intervalos en el tibble
tib <- cbind(tib, nom = interv)
}
CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE, 'GE')
# Añade a un tibble una columna con los intervalos indicados
CrearIntervalos <- function(vec, tib, nom) {
interv <- c()
for (i in 1:(length(vec) - 1))
interv <- c(interv, '(' + vec[i] + ', ' + vec[i + 1] + ']')
# metemos los intervalos en el tibble
tib <- cbind(tib, nom = interv)
}
CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE, 'GE')
# Añade a un tibble una columna con los intervalos indicados
CrearIntervalos <- function(vec, tib, nom) {
interv <- c()
for (i in 1:(length(vec) - 1))
interv <- c(interv, paste('(', vec[i], ', ', vec[i + 1], ']'))
# metemos los intervalos en el tibble
tib <- cbind(tib, nom = interv)
}
CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE, 'GE')
tabla.freq.GE
# mete los datos de un vector en una nueva columna del tibble
ObtenerTibble <- function(vec, tib, nom) {
tib <- cbind(tib, nom = vec)
return(tib)
}
tabla.freq.GE <- CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE, 'GE')
tabla.freq.GE
tabla.freq.GE <- ObtenerTibble(intervalos.GE[[2]], tabla.freq.GE, 'f.a.')
tabla.freq.GE
# Añade a un tibble una columna con los intervalos indicados
CrearIntervalos <- function(vec, tib) {
interv <- c()
for (i in 1:(length(vec) - 1))
interv <- c(interv, paste('(', vec[i], ', ', vec[i + 1], ']', sep = ''))
# metemos los intervalos en el tibble
tib <- cbind(tib, 'GE' = interv)
return(tib)
}
# mete los datos de un vector en una nueva columna del tibble
ObtenerTibble <- function(vec, tib, nom) {
tib <- cbind(tib, nom = vec)
r
tabla.freq.GE <- ObtenerTibble(intervalos.GE[[2]], tabla.freq.GE, "f.a.")
tabla.freq.GE
tabla.freq.GE
# creamos intervalos
vector.GE <- ObtenerVector(gasto.ed)
intervalos.GE <- hist(vector.GE, breaks = 'Sturges', include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
# metemos los datos en la tabla
tabla.freq.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
tabla.freq.GE
intervalos.GE
freq.rel.NEH
gasto.ed
datos
library(dplyr)
library(janitor)
library(ggplot2)
library(fdth)
ObtenerVector <- function(tib) {
for (i in tib)
vec <- i
return(vec)
}
# Añade a un tibble una columna con los intervalos indicados
CrearIntervalos <- function(vec, tib) {
interv <- c()
for (i in 1:(length(vec) - 1))
interv <- c(interv, paste('(', vec[i], ', ', vec[i + 1], ']', sep = ''))
# metemos los intervalos en el tibble
tib <- cbind(tib, 'GE' = interv)
return(tib)
}
# mete los datos de un vector en una nueva columna del tibble
ObtenerTibble <- function(vec, tib, nom) {
tib <- cbind(tib, nom = vec)
return(tib)
}
# ----------------------------------------------------------------
# declaramos variable del dataframe
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
# separamos en dos variables
num.est.hogar <- datos %>% select(1)
gasto.ed <- datos %>% select(2)
# número de datos del fichero
n.total <- count(datos)
# TABLA DE FRECUENCIAS DE NUM.EST.HOGAR
# frecuencias abs num.est.hogar
freq.abs.NEH <- table(num.est.hogar)
# frecuencias rel num.est.hogar
freq.rel.NEH <- prop.table(freq.abs.NEH)
# pasamos a tibble
freq.abs.NEH <- as_tibble(freq.abs.NEH)
freq.abs.NEH <- rename(freq.abs.NEH, NEH = num.est.hogar, f.a. = n)
freq.rel.NEH <- as_tibble(freq.rel.NEH)
freq.rel.NEH <- rename(freq.rel.NEH, NEH = num.est.hogar, f.r. = n)
# frecuencias acumuladas
freq.abs.acc.NEH <- cumsum(freq.abs.NEH[2])
freq.abs.acc.NEH <- rename(freq.abs.acc.NEH, f.a.a. = f.a.)
freq.rel.acc.NEH <- cumsum(freq.rel.NEH[2])
freq.rel.acc.NEH <- rename(freq.rel.acc.NEH, f.r.a. = f.r.)
# creamos tabla de frecuencias
NEH.aux <- num.est.hogar %>% group_by(NEH) %>% summarise(aux = 0)
freq.NEH.aux <- bind_cols(freq.abs.NEH[2], freq.abs.acc.NEH, freq.rel.NEH[2], freq.rel.acc.NEH)
tabla.freq.NEH <- bind_cols(NEH.aux[1], freq.NEH.aux)
# creamos intervalos
vector.GE <- ObtenerVector(gasto.ed)
intervalos.GE <- hist(vector.GE, breaks = 'Sturges', include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
intervalos.GE
# metemos los datos en la tabla
tabla.freq.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
tabla.freq.GE
tabla.freq.GE <- ObtenerTibble(intervalos.GE[[2]], tabla.freq.GE, "f.a.")
tabla.freq.GE
CrearIntervalos <- function(vec, tib) {
interv <- c()
for (i in 1:(length(vec) - 1))
interv <- c(interv, paste('(', vec[i], ', ', vec[i + 1], ']', sep = ''))
# metemos los intervalos en el tibble
tib <- cbind(tib, 'GE' = interv)
return(tib)
}
# mete los datos de un vector en una nueva columna del tibble
ObtenerTibble <- function(vec, tib) {
tib <- cbind(tib, 'f.a.' = vec)
return(tib)
}
# creamos intervalos
vector.GE <- ObtenerVector(gasto.ed)
intervalos.GE <- hist(vector.GE, breaks = 'Sturges', include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
# metemos los datos en la tabla
tabla.freq.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
tabla.freq.GE <- CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE)
tabla.freq.GE <- ObtenerTibble(intervalos.GE[[2]], tabla.freq.GE)
tabla.freq.GE
tabla.freq.GE <- tabla.freq.GE %>% select(2,3)
tabla.freq.GE
tabla.freq.NEH
class(tabla.freq.GE)
tabla.freq.GE <- as_tibble(tabla.freq.GE)
# frecuencias abs acumuladas
freq.abs.acc.GE <- cumsum(tabla.freq.GE[2])
freq.abs.acc.GE
# frecuencias abs acumuladas
freq.abs.acc.GE <- cumsum(tabla.freq.GE[2])
freq.abs.acc.GE <- rename(freq.abs.acc.GE, f.a.a. = f.a.)
freq.abs.acc.GE
gasto.ed
vector.GE
datos
datos <- datos %>% filter(GE < 100)
datos
# declaramos variable del dataframe
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
# número de datos del fichero
n.total <- count(datos)
n-total
n.total
datos <- datos %>% filter(GE < 1000)
datos
install.packages("psych")
library(psych)
geometric.mean(vector.GE)
vector.GE
geometric.mean(vector.GE)
exp(mean(log(vector.GE)))
class(vector.GE)
mean(vector.GE)
datos
# declaramos variable del dataframe
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
datos <- datos %>% filter(GE < 2000)
datos
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
datos <- datos %>% filter(GE < 2700)
datos
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
datos <- datos %>% filter(GE > 900 & GE < 1100)
datos
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
datos <- datos %>% filter(GE > 1900 & GE < 2100)
datos
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
datos <- datos %>% filter(GE > 2600 & GE < 2800)
datos
intervalos.GE
# declaramos variable del dataframe
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
datos <- datos %>% filter(GE > 2500 & GE < 5000)
datos
datos <- fichero_salida
# rm todas las col exc la 2 (ID), la 5 (NEH) y la 57 (GE) y las filas que sean NA
datos <- datos %>% select(2,5,57) %>% filter(!is.na(EHOGAR) & !is.na(GTT))
# pasamos EHOGAR de char a numeric
datos$NEH <- as.numeric(datos$EHOGAR)
datos <- datos %>% select(1,3,4)
# rehacemos el fichero con los gastos totales por hogar
# (viene una entrada por cada estudiante)
datos <- datos %>% group_by(IDHOGAR, NEH) %>% summarise(GE = sum(GTT))
datos <- datos %>% ungroup() %>% select(2, 3)
aux <- datos %>% filter(GE > 2500 & GE < 5000)
aux
aux <- datos %>% filter(GE >= 0 & GE < 2500)
aux
intervalos <- c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 25000, 55000)
intervalos.GE <- hist(vector.GE, breaks = intervalos, include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
intervalos.GE
intervalos <- c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 10000, 20000, 30000, 40000, 55000)
intervalos.GE <- hist(vector.GE, breaks = intervalos, include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
intervalos.GE
intervalos <- c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 20000, 30000, 55000)
intervalos.GE <- hist(vector.GE, breaks = intervalos, include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
intervalos.GE
intervalos <- c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 15000, 20000, 30000, 55000)
intervalos.GE <- hist(vector.GE, breaks = intervalos, include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
intervalos.GE
# metemos los datos en la tabla
tabla.freq.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
tabla.freq.GE <- CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE)
tabla.freq.GE <- ObtenerTibble(intervalos.GE[[2]], tabla.freq.GE)
tabla.freq.GE <- tabla.freq.GE %>% select(2,3)
tabla.freq.GE <- as_tibble(tabla.freq.GE)
tabla.freq.GE
# devuelve el número x con k decimales
EspecificarDecimal <- function(x, k) round(x, k)
# frecuencia rel
freq.rel.GE <- tabla.freq.GE %>% summarise(f.r. = EspecificarDecimal(n() / n.total, 9))
freq.rel.GE
# frecuencia rel
freq.rel.GE <- tabla.freq.GE %>% group_by(GE) %>% summarise(f.r. = EspecificarDecimal(n() / n.total, 9))
freq.rel.GE
n.total
tabla.freq.GE
# frecuencia rel
freq.rel.GE <- tabla.freq.GE %>% group_by(GE) %>% summarise(f.r. = EspecificarDecimal(f.a. / n.total, 9))
freq.rel.GE
intervalos.GE
# creamos intervalos y frecuencias abs
vector.GE <- ObtenerVector(gasto.ed)
intervalos <- c(0, 1000, 2000, 3000, 4000, 5000, 6000, 7000, 8000, 9000, 10000, 15000, 20000, 30000, 55000)
intervalos.GE <- hist(vector.GE, breaks = intervalos, include.lowest = TRUE, right = TRUE, plot = FALSE)
intervalos.GE <- intervalos.GE[1:2]
# metemos los datos en la tabla
tabla.freq.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
tabla.freq.GE <- CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE)
tabla.freq.GE <- ObtenerTibble(intervalos.GE[[2]], tabla.freq.GE)
tabla.freq.GE <- tabla.freq.GE %>% select(2,3)
tabla.freq.GE <- as_tibble(tabla.freq.GE)
# frecuencias abs acumuladas
freq.abs.acc.GE <- cumsum(tabla.freq.GE[2])
freq.abs.acc.GE <- rename(freq.abs.acc.GE, f.a.a. = f.a.)
# frecuencia rel
freq.rel.GE <- tabla.freq.GE %>% group_by(GE) %>% summarise(f.r. = EspecificarDecimal(f.a. / n.total, 9))
freq.rel.GE
# metemos los datos en la tabla
tabla.freq.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
tabla.freq.GE
tabla.freq.GE <- CrearIntervalos(intervalos.GE[[1]], tabla.freq.GE)
tabla.freq.GE
tabla.freq.GE <- ObtenerTibble(intervalos.GE[[2]], tabla.freq.GE)
tabla.freq.GE
tabla.freq.GE <- tabla.freq.GE %>% select(2,3)
tabla.freq.GE <- as_tibble(tabla.freq.GE)
tabla.freq.GE
# frecuencias abs acumuladas
freq.abs.acc.GE <- cumsum(tabla.freq.GE[2])
freq.abs.acc.GE <- rename(freq.abs.acc.GE, f.a.a. = f.a.)
freq.abs-
freq.abs.acc.GE
freq.abs.acc.GE
# frecuencia rel
freq.rel.GE <- tabla.freq.GE %>% group_by(GE) %>% summarise(f.r. = EspecificarDecimal(f.a. / n.total, 9))
freq.rel.GE
# frecuencia rel
freq.rel.GE <- summarise(f.r. = EspecificarDecimal(tabla.freq.GE[2] / n.total, 9))
# frecuencia rel
vector.fa.GE <- ObtenerVector(freq.abs.GE[2])
vector.fa.GE
# frecuencia rel
vector.fa.GE <- ObtenerVector(tabla.freq.GE[2])
vector.fa.GE
vector.fr.GE <- vector.fa.GE / n.total
vector.fr.GE
# calcula las frecuencias relativas
FrecuenciasRelativas <- function(vec_abs) {
rel <- c()
for (i in vec_abs)
rel <- i / n.total
return(rel)
}
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
vector.fr.GE
vector.fa.GE
# calcula las frecuencias relativas
FrecuenciasRelativas <- function(vec_abs) {
rel <- c()
for (i in 1:length(vec_abs))
rel <- EspecificarDecimal(vec_abs[i] / n.total, 9)
return(rel)
}
# frecuencia rel
vector.fa.GE <- ObtenerVector(tabla.freq.GE[2])
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
vector.fr.GE
# calcula las frecuencias relativas
FrecuenciasRelativas <- function(vec_abs) {
rel <- c()
for (i in 1:length(vec_abs))
rel <- c(EspecificarDecimal(vec_abs[i] / n.total, 9))
return(rel)
}
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
vector.fr.GE
# calcula las frecuencias relativas
FrecuenciasRelativas <- function(vec_abs) {
rel <- c()
for (i in 1:length(vec_abs))
rel <- c(rel, EspecificarDecimal(vec_abs[i] / n.total, 9))
return(rel)
}
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
vector.fr.GE
freq.rel.GE <- ObtenerTibble(vector.fr.GE, freq.rel.GE)
freq.rel.GE
freq.rel.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
freq.rel.GE
# mete los datos del vector en un tibble que crea
ObtenerTibbleFR <- function(vec, tib) {
tib <- cbind(tib, 'f.r.' = vec)
return(tib)
}
freq.rel.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
freq.rel.GE <- ObtenerTibbleFR(vector.fr.GE, freq.rel.GE)
freq.rel.GE
vector.fr.GE
vec_abs
tabla.freq.GE[2]
vector.fr.GE
vector.fa.GE
length(vec_abs)
length(vector.fa.GE)
rel <- c()
rel
class(rel)
rel <- c(rel, EspecificarDecimal(vector.fa.GE[1] / n.total, 9))
rel
rel <- c(rel, EspecificarDecimal(vector.fa.GE[2] / n.total, 9))
rel
rel <- c(rel, vec_abs[i] / n.total)
rel <- c(rel, vector.fa.GE[2] / n.total)
rel
class(rel)
rel <- c()
class(rel)
rel <- EspecificarDecimal(vector.fa.GE[1] / n.total, 9)
rel
rel
class(rel)
rel <- c()
rel <- vector.fa.GE[1] / n.total
rel
class(rel)
rel <- c(rel, vector.fa.GE[2] / n.total)
rel
rel <- as.numeric(vec_abs[1] / n.total)
rel <- as.numeric(vector.fa.GE[1] / n.total)
rel
# calcula las frecuencias relativas
FrecuenciasRelativas <- function(vec_abs) {
rel <- as.numeric(vec_abs[1] / n.total)
for (i in 1:length(vec_abs))
rel <- c(rel, as.numeric(vec_abs[i] / n.total))
return(rel)
}
# frecuencia rel
vector.fa.GE <- ObtenerVector(tabla.freq.GE[2])
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
vector.fr.GE
freq.rel.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
freq.rel.GE <- ObtenerTibbleFR(vector.fr.GE, freq.rel.GE)
FrecuenciasRelativas <- function(vec_abs) {
for (i in 1:length(vec_abs))
rel <- c(rel, as.numeric(vec_abs[i] / n.total))
return(rel)
}
# frecuencia rel
vector.fa.GE <- ObtenerVector(tabla.freq.GE[2])
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
freq.rel.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
freq.rel.GE <- ObtenerTibbleFR(vector.fr.GE, freq.rel.GE)
vector.fr.GE
vector.fa.GE
length(vector.fa.EG)
lenght(vector.fa.GE)
length(vector.fa.GE)
length(vector.fr.GE)
# calcula las frecuencias relativas
FrecuenciasRelativas <- function(vec_abs) {
for (i in 1:length(vec_abs))
rel <- c(rel, as.numeric(vec_abs[i] / n.total))
return(rel)
}
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
vector.fr.GE
# calcula las frecuencias relativas
FrecuenciasRelativas <- function(vec_abs) {
rel <- c()
for (i in 1:length(vec_abs))
rel <- c(rel, as.numeric(vec_abs[i] / n.total))
return(rel)
}
vector.fr.GE <- FrecuenciasRelativas(vector.fa.GE)
vector.fr.GE
freq.rel.GE <- tibble(aux = 1:(length(intervalos.GE[[1]]) - 1))
freq.rel.GE <- ObtenerTibbleFR(vector.fr.GE, freq.rel.GE)
freq.rel.GE
intervalos.GE
freq.rel.GE <- freq.rel.GE %>% select(2)
freq.rel.GE <- as_tibble(freq.rel.GE)
freq.rel.GE
# frecuencias rel acumuladas
freq.rel.acc.GE <- cumsum(freq.rel.GE)
freq.rel.acc.GE
freq.rel.acc.GE <- rename(freq.rel.acc.GE, f.r.a. = f.r.)
tabla.freq.GE
# terminamos tabla de frecuencias
tabla.freq.GE <- bind_cols(tabla.freq.GE, freq.abs.acc.GE, freq.rel.GE, freq.rel.acc.GE)
tabla.freq.GE
tabla.freq.NEH
